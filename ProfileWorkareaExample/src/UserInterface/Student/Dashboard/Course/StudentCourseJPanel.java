/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Student.Dashboard.Course;

import Business.Admin;
import Business.Course.Course;
import Business.Professor.Professor;
import Business.Student.Student;
import UserInterface.Student.Dashboard.CourseRegister.StudentCourseRegisterJPanel;
import UserInterface.Student.Dashboard.CourseView.StudentViewClassJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author JANFAN
 */
public class StudentCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentCourseJPanel
     */
    JSplitPane SplitPane;
    Admin admin;
    Student student;

    public StudentCourseJPanel(JSplitPane SplitPane,Admin admin,Student student) {
        initComponents();
        this.SplitPane=SplitPane;
        this.admin=admin;
        this.student=student;

        populateCurrentCourseTable();
        populateCourseHistoryTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblCurrentCourse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurrentCourse = new javax.swing.JTable();
        btnDropClass = new javax.swing.JButton();
        btnJoinClass = new javax.swing.JButton();
        btnViewDetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseHistory = new javax.swing.JTable();
        lblCourseHistory = new javax.swing.JLabel();
        btnRateMyProfessor = new javax.swing.JButton();
        boxRate = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(251, 238, 172));

        lblTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("COURSE MANAGEMENT");

        lblCurrentCourse.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        lblCurrentCourse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCurrentCourse.setText("CURRENT COURSE");

        tblCurrentCourse.setBackground(new java.awt.Color(204, 255, 204));
        tblCurrentCourse.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tblCurrentCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Code", "Semester", "Weekday", "Hour", "Capacity", "Current student", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCurrentCourse.setSelectionBackground(new java.awt.Color(0, 51, 51));
        jScrollPane1.setViewportView(tblCurrentCourse);

        btnDropClass.setBackground(new java.awt.Color(117, 194, 246));
        btnDropClass.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnDropClass.setText("DROP CLASS");
        btnDropClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropClassActionPerformed(evt);
            }
        });

        btnJoinClass.setBackground(new java.awt.Color(117, 194, 246));
        btnJoinClass.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnJoinClass.setText("JOIN ANOTHER CLASS");
        btnJoinClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinClassActionPerformed(evt);
            }
        });

        btnViewDetail.setBackground(new java.awt.Color(117, 194, 246));
        btnViewDetail.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnViewDetail.setText("VIEW DETAIL");
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        tblCourseHistory.setBackground(new java.awt.Color(204, 255, 204));
        tblCourseHistory.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tblCourseHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Code", "Professor", "Semester", "Weekday", "Hour", "Capacity", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCourseHistory.setSelectionBackground(new java.awt.Color(0, 51, 51));
        jScrollPane2.setViewportView(tblCourseHistory);

        lblCourseHistory.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        lblCourseHistory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCourseHistory.setText("COURSE HISTORY");

        btnRateMyProfessor.setBackground(new java.awt.Color(117, 194, 246));
        btnRateMyProfessor.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnRateMyProfessor.setText("RATE YOUR PROFESSOR");
        btnRateMyProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateMyProfessorActionPerformed(evt);
            }
        });

        boxRate.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        boxRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Defult", "1", "2", "3", "4", "5" }));
        boxRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxRateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblCurrentCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addComponent(lblCourseHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDropClass, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnJoinClass))
                            .addComponent(btnViewDetail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(boxRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRateMyProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {boxRate, btnDropClass, btnJoinClass, btnRateMyProfessor, btnViewDetail});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCurrentCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnJoinClass, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDropClass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewDetail)
                .addGap(30, 30, 30)
                .addComponent(lblCourseHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRateMyProfessor))
                .addGap(30, 30, 30))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDropClass, btnJoinClass, btnRateMyProfessor, btnViewDetail});

    }// </editor-fold>//GEN-END:initComponents
/**
 * Event handler for the "Join Class" button action.
 * This method is called when the user clicks the "Join Class" button to register for a course as a student.
 * It navigates to the student course registration panel, allowing the student to register for courses.
 *
 * @param evt The action event that triggered this method.
 */
    private void btnJoinClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinClassActionPerformed
        // TODO add your handling code here:
        StudentCourseRegisterJPanel studentCourseRegisterJPanel=new StudentCourseRegisterJPanel(admin,student,SplitPane);
        SplitPane.setRightComponent(studentCourseRegisterJPanel);
    }//GEN-LAST:event_btnJoinClassActionPerformed
/**
 * Event handler for the "View Details" button action.
 * This method is called when the user clicks the "View Details" button to view the details of a selected course.
 * It retrieves the selected course and navigates to the student view class panel to display course details.
 *
 * @param evt The action event that triggered this method.
 */
    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow=tblCurrentCourse.getSelectedRow();
         if(selectedRow<0){
                JOptionPane.showMessageDialog(null,"Please select a row from table first to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }     
        DefaultTableModel model=(DefaultTableModel)tblCurrentCourse.getModel();
        Course selectedcourse=(Course)model.getValueAt(selectedRow,0);
        StudentViewClassJPanel studentViewClassJPanel=new StudentViewClassJPanel(selectedcourse, admin,student , SplitPane);
        SplitPane.setRightComponent(studentViewClassJPanel);

    }//GEN-LAST:event_btnViewDetailActionPerformed
/**
 * Event handler for the "Drop Class" button action.
 * This method is called when the user clicks the "Drop Class" button to remove a course from the student's current courses.
 * It removes the course from the student's current courses, removes the student from the course's student list, and checks the course's waitlist to move a student to the student list if necessary.
 *
 * @param evt The action event that triggered this method.
 */
    private void btnDropClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropClassActionPerformed
        // TODO add your handling code here:
        // drop class:
        //1.student delete this class in the current course
        //2.course delete the student in student list
        //3.course check waitlist if have student move student to student list;
        
        int selectedRowIndex=tblCurrentCourse.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to drop");
            return;
        }
        DefaultTableModel model=(DefaultTableModel)tblCurrentCourse.getModel();
        Course selectedCourse=(Course)model.getValueAt(selectedRowIndex,0);
        
        student.getCurrentCourses().remove(selectedCourse);
        JOptionPane.showMessageDialog(this,"Course deleted.");
        
        populateCurrentCourseTable();
        
        //course delete the student in student list
        selectedCourse.getStudentList().remove(student);
        //course check waitlist if have student move student to student list;
        
        if(!selectedCourse.getWaitList().isEmpty()){
            Student newStudent=selectedCourse.getWaitList().get(0);
            selectedCourse.getWaitList().remove(0);
            selectedCourse.getStudentList().add(newStudent);
            newStudent.getCurrentCourses().add(selectedCourse);
        }
        
        
    }//GEN-LAST:event_btnDropClassActionPerformed
/**
 * Event handler for the "Rate My Professor" button action.
 * This method is called when the user clicks the "Rate My Professor" button to rate a professor for a completed course.
 * It retrieves the selected course, the rating, and the professor's name and adds the rating to the professor's list of ratings, calculating the professor's overall rating.
 *
 * @param evt The action event that triggered this method.
 */
    private void btnRateMyProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateMyProfessorActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=tblCourseHistory.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a course to rate professor");
            return;
        }
        DefaultTableModel model=(DefaultTableModel)tblCourseHistory.getModel();
        Course selectedCourse=(Course)model.getValueAt(selectedRowIndex,0);
        int rate=Integer.parseInt(boxRate.getSelectedItem().toString());
        String pName=selectedCourse.getProfessorName();
        
        for(Professor p:admin.getAllProfessor()){
            if(p.getName().equals(pName)){
                p.getRank().add(rate);
                p.calRate();
                break;
            }
            
        }
        JOptionPane.showMessageDialog(this,"Successfully rate professor!"); 

    }//GEN-LAST:event_btnRateMyProfessorActionPerformed

    private void boxRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxRateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxRate;
    private javax.swing.JButton btnDropClass;
    private javax.swing.JButton btnJoinClass;
    private javax.swing.JButton btnRateMyProfessor;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCourseHistory;
    private javax.swing.JLabel lblCurrentCourse;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourseHistory;
    private javax.swing.JTable tblCurrentCourse;
    // End of variables declaration//GEN-END:variables
 private void populateCurrentCourseTable() {
        DefaultTableModel model=(DefaultTableModel)tblCurrentCourse.getModel();
        model.setRowCount(0);
        
        for(Course course : student.getCurrentCourses()){
            Object[]row =new Object[7];
            row[0]=course;
            row[1]=course.getSemester();
            row[2]=course.getWeekdays().toString();
            row[3]=course.getHours();
            row[4]=10;
            row[5]=course.getStudentList().size();
            row[6]=course.getGrade().get(student);
            model.addRow(row);
        }            
    }

    private void populateCourseHistoryTable() {
        DefaultTableModel model=(DefaultTableModel)tblCourseHistory.getModel();
        model.setRowCount(0);
        
        for(Course course : student.getCourseHistory()){
            Object[]row =new Object[7];
            row[0]=course;
            row[1]=course.getProfessorName();
            row[2]=course.getSemester();
            row[3]=course.getWeekdays().toString();
            row[4]=course.getHours();
            row[5]=10;
            row[6]=course.getGrade().get(student);
            model.addRow(row);
        }
    }

}
